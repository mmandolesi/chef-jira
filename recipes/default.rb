#
# Cookbook Name:: jira
# Recipe:: default
#
# Copyright (c) 2016 The Authors, All Rights Reserved.

java_url = node['java']['download_url']
java_package_name = ::File.basename(java_url)
java_local_path = "#{Chef::Config[:file_cache_path]}/#{java_package_name}"

remote_file java_local_path do
  source java_url
end

package java_package_name do
  action :install
  source java_local_path
  provider Chef::Provider::Package::Rpm
end

package_url = node['jira-server']['download_url']
package_name = ::File.basename(package_url)
package_local_path = "#{Chef::Config[:file_cache_path]}/#{package_name}"

remote_file package_local_path do
  source package_url
end

execute 'extract_jira_tar' do
  command "tar xvf #{package_local_path} -C /opt/"
  not_if "ls /opt/jira/logs"
end

link node['jira-server']['base_install_sym'] do
  to node['jira-server']['base_install']
  link_type :symbolic
end

user node['jira-server']['user'] do
  comment 'Jira user generated by Chef'
  home "/home/#{node['jira-server']['user']}"
  shell '/bin/bash'
  action :create
end

group node['jira-server']['group'] do
  action :create
  append true
  members "#{node['jira-server']['user']}"
end

cookbook_file '/opt/jira/lib/mysql-connector-java-5.1.38-bin.jar' do
  source 'mysql-connector-java-5.1.38-bin.jar'
  action :create
end

execute 'jira_user_chown' do
  command "chown -R #{node['jira-server']['user']}:#{node['jira-server']['group']} #{node['jira-server']['base_install_sym']} \
            && chown -R #{node['jira-server']['user']}:#{node['jira-server']['group']} #{node['jira-server']['base_install']} "
end

directory node['jira-server']['jira_home'] do
  owner node['jira-server']['user']
  group node['jira-server']['user']
  mode '0755'
  action :create
end

package ['httpd', 'mod_ssl', 'mysql', 'mysql-server' ]

template '/etc/httpd/conf/httpd.conf' do
  source 'httpd.conf.erb'
  mode '0755'
  owner 'root'
  group 'root'
end

template '/etc/httpd/conf.d/ssl.conf' do
  source 'ssl.conf.erb'
  mode '0755'
  owner 'root'
  group 'root'
end

service "httpd" do
  action [:enable, :start]
end

service "mysqld" do
  action [:enable, :start]
end

# execute 'iptables' do
#   command 'iptables -I INPUT 2 -p tcp --dport 8080 -j ACCEPT && iptables-save'
# end

execute 'mysql_db_setup' do
  command "/usr/bin/mysql -u root -e \"CREATE DATABASE #{node['mysql']['database_name']} CHARACTER SET utf8 COLLATE utf8_bin\""
  not_if "/usr/bin/mysql -u root -e \"SHOW DATABASES\" | grep #{node['mysql']['database_name']}"
end

execute 'mysql_create_user' do
  command "/usr/bin/mysql -u root -e \"CREATE USER #{node['mysql']['user']}@localhost IDENTIFIED BY '#{node['mysql']['password']}'\""
  not_if  "/usr/bin/mysql -u root -e \"SELECT USER FROM mysql.user\" | grep #{node['mysql']['user']}"
  notifies :run, 'execute[mysql_privileges]', :immediately
end

execute 'mysql_privileges' do
  command "/usr/bin/mysql -u root -e \"GRANT ALL PRIVILEGES ON *.* TO #{node['mysql']['user']}@localhost\""
  action :nothing
end

template '/jira/dbconfig.xml' do
  source 'dbconfig.xml.erb'
  mode '0644'
end

template '/opt/jira/bin/setenv.sh' do
  source 'setenv.sh.erb'
  mode '0644'
end

template '/opt/jira/conf/server.xml' do
  source 'server.xml.erb'
  mode '0755'
  owner node['jira-server']['user']
  group node['jira-server']['user']
end

template '/etc/init.d/jira' do
  source 'jira.erb'
  mode '0755'
  owner 'root'
  group 'root'
  notifies :run, 'execute[add_jira_service]', :immediately
end

execute 'add_jira_service' do
  command "chkconfig --add jira"
  action :nothing
end

service "jira" do
  action [:enable, :start]
end
